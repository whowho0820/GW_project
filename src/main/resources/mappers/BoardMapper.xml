<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.BoardMapper">
	<!-- 아름 -->
	
	 <!-- **********************************************************************      RESULTMAP     ***************************************************************************** -->
	 <!-- 추천카페:리스트 resultMap  JOIN테이블[board + zone + theme]-->				
     <resultMap type="BoardVO" id="recommendBoardList">
		<id property="boardNo" column="board_no"/>
		<result property="boardNo2.boardNo" column="board_no2"/>
		<result property="writingTitle" column="writing_title"/>
		<result property="viewNumber" column="view_number"/>
		<result property="zoneNo.zoneNo" column="zone_no"/>
		<result property="zoneNo.zoneName" column="zone_name"/>		
		<result property="themeNo.themeNo" column="theme_no"/>
		<result property="themeNo.themeName" column="theme_name"/>
		<collection property="files" resultMap="mappers.ImageMapper.imageResult"/>				
	</resultMap>
	 
	 <!-- 추천카페:상세보기 resultMap JOIN테이블[board + zone + theme + users + grade] -->
     <resultMap type="BoardVO" id="recommendBoardRead">
		<id property="boardNo" column="board_no"/>
		<result property="writingTitle" column="writing_title"/>
		<result property="registrationDate" column="registration_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="viewNumber" column="view_number"/>
		<result property="voteNumber" column="vote_number"/>
		<result property="writingContent" column="writing_content"/>
		<result property="address" column="address"/>
		<result property="zoneNo.zoneNo" column="zone_no"/>
		<result property="zoneNo.zoneName" column="zone_name"/>		
		<result property="themeNo.themeNo" column="theme_no"/>
		<result property="themeNo.themeName" column="theme_name"/>
		<result property="userNo.userNo" column="user_no"/>
		<result property="userNo.userId" column="user_id"/>
		<result property="userNo.password" column="password"/>
		<result property="userNo.nick" column="nick"/>
		<result property="userNo.userGrade.userGradeImage" column="user_grade_image"/>	
	</resultMap>
	
	<resultMap type="ImageVO" id="selectImgResult">
		<id property="imageNo" column="image_no"/>
		<result property="imageName" column="image_name"/>
		<result property="cafeNo.cafeNo" column="cafe_no"/>
		<result property="boardNo.boardNo" column="board_no"/>		
	</resultMap>	
	
	 <!-- **********************************************************************      QUERY     ***************************************************************************** -->	
	<!-- 추천카페 : 리스트 : Main Home-->
	<select id="recommendboardList" resultMap="recommendBoardList">
		select b.board_no, b.board_no2, b.writing_title, b.view_number, z.zone_no, z.zone_name, t.theme_no, t.theme_name from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		where b.board_no2 = 2 and b.board_del_cdt = 1
		order by b.board_no desc limit 0, 9;
	</select>
	
	<!-- 추천카페 : 페이징된 리스트 -->
	<select id = "recommendboardListSearchCriteria" parameterType="map" resultMap="BoardResult">
		select b.board_no, b.board_no2, b.writing_title, b.writing_content, b.view_number, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_id, u.name, u.nick from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		<include refid="search"/>
		order by b.board_no desc limit #{cri.pageStart}, #{cri.perPageNum} <!-- 카페추천 : 한페이지당 16개씩 보여줌 -->
	</select>		 	
	<!-- 이미지 -->
	<select id="boardImgList" resultMap="selectImgResult">
		select b.board_no, i.board_no ,i.image_name from image i
		left join board b on i.board_no = b.board_no
		where i.board_no = #{sboardNo} limit 1;
	</select>	
	<!-- 추천카페 : 글등록 -->
	<insert id="recommendInsert" parameterType="BoardVO" useGeneratedKeys="true" keyProperty="boardNo"> <!-- LAST_INSERT_ID()가 인식되지 않음 -->
		insert into board (board_no, board_no2, user_no, zone_no, theme_no, writing_title, writing_content, address) values (#{boardNo}, #{boardNo2.boardNo}, #{userNo.userNo}, #{zoneNo.zoneNo}, #{themeNo.themeNo}, #{writingTitle}, #{writingContent}, #{address})
	</insert>
	
	<!--추천카페 이미지 업로드  -->
	<insert id="recommendInsertImages">
		insert into image (image_name,board_no) values (#{imageName},#{boardNo})
	</insert>	
	
	<!-- 추천카페 상세보기 -->
	<select id="recommendReadByNo" resultMap="BoardResult">
		select b.board_no, b.writing_title, b.registration_date, b.update_date, b.view_number, b.vote_number, b.writing_content, b.address, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_no, u.user_id, u.password, u.nick, g.user_grade, g.user_grade_image, g.user_grade_name, i.image_name from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		left join grade g on u.user_grade = g.user_grade
		left join image i on b.board_no = i.board_no
		where b.board_no2 = 2 and b.board_no = #{boardNo} and b.board_del_cdt = 1
	</select>
	<!-- 추천카페 : 같은카페리스트  : 카페명, 주소 같아야함 // 해당게시글번호는 나오면 안됨  // 최신순으로 정렬 -->
	<select id="recommendSameCafeList" resultMap="BoardResult">
		select b.board_no, b.board_no2, b.writing_title, b.writing_content, b.view_number, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_id, u.name, u.nick from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no
		where b.writing_title = #{writingTitle} and b.address = #{address} and b.board_no != #{boardNo} and b.board_del_cdt = 1
		order by b.board_no desc	
	</select>
	<!-- 추천카페 : 같은카페 개수  -->
	<select id="recommendSameCafeCnt" resultType="int">
		select count(*) from board where writing_title = #{writingTitle} and address = #{address} and board_no != #{boardNo} and board_del_cdt = 1
	</select>	
	
 	<!-- 추천카페 : 같은키워드카페리스트 : 지역,테마 같아야함 // 해당게시글 번호는 나오면 안됨 // 최신순으로 정렬 -->
 	<select id="recommendSameKeywordList" resultMap="BoardResult">
		select b.board_no, b.board_no2, b.writing_title, b.writing_content, b.view_number, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_id, u.name, u.nick from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no
		where b.zone_no = #{zoneNo.zoneNo} and b.theme_no = #{themeNo.themeNo} and b.board_no != #{boardNo} and b.board_del_cdt = 1
		order by b.board_no desc	
	</select>
	
	<!-- 추천카페 : 같은지역,테마  개수 -->
 	<select id="recommendSameKeywordCnt" resultType="int">
		select count(*) from board where zone_no = #{zoneNo.zoneNo} and theme_no = #{themeNo.themeNo} and board_no != #{boardNo} and board_del_cdt = 1
	</select> 
	
	<!-- 추천카페 업로드한 이미지 (수정)삭제 -->
	<delete id="removeRecommendImg">
		delete from image where image_name = #{imageName}
	</delete>
	
	<!-- 추천카페 수정 -->
	<update id="recommendUpdate" parameterType="BoardVO" useGeneratedKeys="true" keyProperty="boardNo">
		update board
			set zone_no = #{zoneNo.zoneNo}, theme_no = #{themeNo.themeNo}, writing_title = #{writingTitle}, writing_content = #{writingContent}, address = #{address}, update_date = now()
		where board_no = #{boardNo}
	</update>
	
	<!-- 추천카페 : 삭제 (삭제 여부 수정) -->
	<update id="cafeRecommendRemove" parameterType="BoardVO">
		update board 
			set board_del_cdt = #{boardDelCdt}
			where board_no = #{boardNo}
	</update>	
		
	<!-- 재승 추가 -->
	
	<!-- 추천카페 : 같은키워드카페리스트 : 지역,테마 같아야함 // 해당게시글 번호는 나오면 안됨 // 최신순으로 정렬 -->
 	<select id="recommendSameKeywordListByZoneAndTheme" resultMap="BoardResult">
		select b.board_no, b.board_no2, b.writing_title, b.writing_content, b.view_number, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_id, u.name, u.nick from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no
		where b.zone_no = #{cafeNo.zoneNo.zoneNo} and b.theme_no = #{cafeNo.themeNo.themeNo}
		order by b.board_no desc	
	</select>
	<!-- 추천카페 : 같은지역,테마  개수 -->
 	<select id="recommendSameKeywordCntByZoneAndTheme" resultType="int">
		select count(*) from board where zone_no = #{cafeNo.zoneNo.zoneNo} and theme_no = #{cafeNo.themeNo.themeNo}
	</select> 
	
	<!-- 추천카페[랭킹]:전체(월따지지 않고) 추천순 -->
	<select id="rcRankVoteAll" resultMap="BoardResult">
		select b.board_no, b.writing_title, b.registration_date, b.update_date, b.view_number, b.vote_number, b.writing_content, b.address, b.reply_cnt, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_no, u.user_id, u.password, u.nick, g.user_grade, g.user_grade_image, g.user_grade_name from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		left join grade g on u.user_grade = g.user_grade
		where b.board_no2 = 2 and b.board_del_cdt = 1 order by vote_number desc limit 20
	</select>
	
	<!-- 추천카페[랭킹]:해당월  추천순 -->
	<select id="rcRankVoteMonth" resultMap="BoardResult">
		select b.board_no, b.writing_title, b.registration_date, b.update_date, b.view_number, b.vote_number, b.writing_content, b.address, b.reply_cnt, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_no, u.user_id, u.password, u.nick, g.user_grade, g.user_grade_image, g.user_grade_name from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		left join grade g on u.user_grade = g.user_grade
		where b.board_no2 = 2 and b.board_del_cdt = 1 and left(DATE_SUB(curdate(), INTERVAL 0 month),7) = left(registration_date,7) order by vote_number desc limit 10
	</select>	
	<!-- 추천카페[랭킹]:해당월  조회순 -->
	<select id="rcRankViewMonth" resultMap="BoardResult">
		select b.board_no, b.writing_title, b.registration_date, b.update_date, b.view_number, b.vote_number, b.writing_content, b.address, b.reply_cnt, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_no, u.user_id, u.password, u.nick, g.user_grade, g.user_grade_image, g.user_grade_name from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		left join grade g on u.user_grade = g.user_grade
		where b.board_no2 = 2 and b.board_del_cdt = 1 and left(DATE_SUB(curdate(), INTERVAL 0 month),7) = left(registration_date,7) order by view_number desc limit 10
	</select>	
	<!-- 추천카페[랭킹]:해당월  댓글순 -->
	<select id="rcRankReplyMonth" resultMap="BoardResult">
		select b.board_no, b.writing_title, b.registration_date, b.update_date, b.view_number, b.vote_number, b.writing_content, b.address, b.reply_cnt, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_no, u.user_id, u.password, u.nick, g.user_grade, g.user_grade_image, g.user_grade_name from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		left join grade g on u.user_grade = g.user_grade
		where b.board_no2 = 2 and b.board_del_cdt = 1 and left(DATE_SUB(curdate(), INTERVAL 0 month),7) = left(registration_date,7) order by reply_cnt desc limit 10
	</select>	
	
	<!-- 추천카페[랭킹]:전월  추천순 --> 		
	<select id="rcRankVoteLastMonth" resultMap="BoardResult">
		select b.board_no, b.writing_title, b.registration_date, b.update_date, b.view_number, b.vote_number, b.writing_content, b.address, b.reply_cnt, z.zone_no, z.zone_name, t.theme_no, t.theme_name, u.user_no, u.user_id, u.password, u.nick, g.user_grade, g.user_grade_image, g.user_grade_name from board b
		left join zone z on b.zone_no = z.zone_no
		left join theme t on b.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		left join grade g on u.user_grade = g.user_grade
		where b.board_no2 = 2 and b.board_del_cdt = 1 and left(DATE_SUB(curdate(), INTERVAL 1 month),7) = left(registration_date,7) order by vote_number desc limit 10
	</select>	
<!-- **********************************************************************      공통 RESULTMAP     ***************************************************************************** -->
	<!-- BoardResultMap JOIN테이블[boardKinds + keySortNo + users + grade + zone + theme + cafe ] -->
	<resultMap type="BoardVO" id="BoardResult">
		<id property="boardNo" column="board_no"/>
		<!-- 게시판 분류 -->
		<result property="boardNo2.boardNo" column="board_no2"/> 
		<!-- 키워드분류 -->
		<result property="keySortNo.keySortNo" column="key_sort_no"/>
		<result property="keySortNo.keyName" column="key_name"/>
		<!-- 회원 -->
		<result property="userNo.userNo" column="user_no"/>
		<result property="userNo.userId" column="user_id"/>
		<result property="userNo.password" column="password"/>
		<result property="userNo.nick" column="nick"/>
		<result property="userNo.userGrade.userGradeImage" column="user_grade_image"/>
		<!-- 지역 -->
		<result property="zoneNo.zoneNo" column="zone_no"/>
		<result property="zoneNo.zoneName" column="zone_name"/>		
		<!-- 테마 -->
		<result property="themeNo.themeNo" column="theme_no"/>
		<result property="themeNo.themeName" column="theme_name"/>
		<!-- 카페 -->
		<result property="cafeNo.cafeNo" column="cafe_no"/>		
		<result property="cafeNo.cafeName" column="cafe_name"/>
		<result property="cafeNo.zoneNo.zoneName" column="zone_name"/>
		<result property="cafeNo.themeNo.themeName" column="theme_name"/>
		<result property="cafeNo.address" column="address"/>
		
		<!-- 게시글 컬럼 -->
		<result property="writingLockCondition" column="writing_lock_condition"/>
		<result property="writingTitle" column="writing_title"/>
		<result property="registrationDate" column="registration_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="viewNumber" column="view_number"/>
		<result property="voteNumber" column="vote_number"/>
		<result property="writingContent" column="writing_content"/>
		<result property="address" column="address"/>
		<result property="boardDelCdt" column="board_del_cdt"/>
		<result property="replyCnt" column="reply_cnt"/>
		
		<!-- 이미지 -->
		<collection property="files" resultMap="mappers.ImageMapper.imageResult"/>
		
	</resultMap>
	
<!-- **********************************************************************   공통 QUERY     ***************************************************************************** -->	
		
	<!-- 공통 : 오늘 등록된 글 갯수 -->
	<select id="todayBoardCount" resultType="int">
		select count(*) from board where CAST(DATE_FORMAT(registration_date, '%Y%m%d') AS CHAR(8)) = CAST( DATE_FORMAT( NOW(),'%Y%m%d' ) AS CHAR(8)) and board_no2 = #{cBoardNo} and board_del_cdt = 1<!-- 커뮤니티 게시판 번호 -->
	</select>
	<!-- 공통 : 각 서브게시물별 등록된 게시글 총 갯수(페이징시 이용) -->
	<select id="totalSearchCount" resultType="int">
		select count(board_no) from board where board_no2 = #{cBoardNo}
	</select>
	
	<!-- 공통 : 각 서브게시물별 등록된 게시글 총 갯수(페이징시 이용) -->
	<select id="totalSearchCountJoin" parameterType="map" resultType="int">
		select count(b.board_no) 
			from board b
				 left join users u on b.user_no = u.user_no 
				 left join grade g on u.user_grade = g.user_grade 
				 left join cafe c on b.cafe_no = c.cafe_no 
				 left join zone z on c.zone_no = z.zone_no 
				 left join theme t on c.theme_no = t.theme_no
			<include refid="search"/>
	</select>
	
	<select id="adminTotalSearchCountJoin" parameterType="map" resultType="int">
		select count(b.board_no) 
			from board b
				 left join users u on b.user_no = u.user_no 
				 left join grade g on u.user_grade = g.user_grade 
				 left join cafe c on b.cafe_no = c.cafe_no 
				 left join zone z on c.zone_no = z.zone_no 
				 left join theme t on c.theme_no = t.theme_no
			<include refid="adminSearch"/>
	</select>
	
	<!-- 공통 : 유저가 등록한 게시글 갯수 -->
	<select id="totalUserBoardCount" resultType="int">
		select count(*) from board where user_no = #{user_no};
	</select>
	
	<!-- 공통 : 검색 -->
	<sql id="search">
		<where> 
			b.board_no2 = #{cBoardNo} and b.board_del_cdt = 1
			<include refid="searchIf"/>
		</where>
	</sql>
	
	<sql id="adminSearch">
		<where> 
			b.board_no2 = #{cBoardNo}
			<include refid="searchIf"/>
		</where>
	</sql>
	
	<!-- 공통 : 키워드 이용 검색 가능한 페이징 처리 매퍼 -->
	<sql id="searchIf">
		<if test="cri.searchZone != '' and cri.searchZone != null">			
			AND z.zone_no = #{cri.searchZone}
		</if>
		<if test="cri.searchTheme != '' and cri.searchTheme != null">
			AND t.theme_no = #{cri.searchTheme}
		</if>
		<if test="cri.searchType == 't'.toString()">
			AND b.writing_title like CONCAT('%', #{cri.keyword}, '%')
		</if>
		<if test="cri.searchType == 'c'.toString()">
			AND b.writing_content like CONCAT('%', #{cri.keyword}, '%')
		</if>
		<if test="cri.searchType == 'tc'.toString()">
			AND b.writing_title like CONCAT('%', #{cri.keyword}, '%') OR b.writing_content like CONCAT('%', #{cri.keyword}, '%')
		</if>
		<if test="cri.searchType == 'uId'.toString()">
			AND u.user_id = #{cri.keyword}
		</if>
		<if test="cri.searchType == 'uName'.toString()">
			AND u.nick = #{cri.keyword} OR u.name = #{cri.keyword}
		</if>
	</sql>
	
	<!-- 공통 : 게시글 조회수 -->
	<update id="updateViewCnt">
		update board set view_number = view_number+1 where board_no = #{boardNo}
	</update>
	
	<!-- 공통 : 게시글 추천(좋아요) 더하기 -->
	<insert id="insertVotePlusCnt" parameterType="map">
		insert into vote(board_no, user_no) values(#{boardNo}, #{userNo})
	</insert>
	<!-- 공통 : 게시글 추천(좋아요) 빼기 -->
	<delete id="deleteVoteMinusCnt" parameterType="map">
		delete from vote where board_no = #{boardNo} and user_no = #{userNo}
	</delete>
	<!-- 공통 : 게시글 추천 갯수 게시판 테이블에 추가 -->
	<update id="updateBoardVoteCnt">
		update board 
			set vote_number = (select count(*) from vote where board_no = #{boardNo})
			where board_no = #{boardNo}
	</update>
	<!-- 공통 : 게시글 추천(좋아요) 갯수 -->
	<select id="boardVoteCnt" resultType="int">
		select vote_number from board where board_no = #{boardNo}
	</select>
	
	<!-- 공통 : 게시글 댓글 갯수 추가 -->
	<update id="updateBoardReplyCnt" parameterType="map">
		update board set reply_cnt = reply_cnt + #{amount} where board_no = #{boardNo};
	</update>
	
	<!-- 공통 : 로그인 회원 좋아요 클릭 여부 -->
	<select id="userVoteCdt" parameterType="map" resultType="int">
		select count(*) from vote where user_no = #{userNo} and board_no = #{boardNo};
	</select>
	
	<!-- 공통 : 어드민 탐방기 관리 list -->
	<select id="adminBoardList" parameterType="map" resultMap="BoardResult">
		<include refid="cafeRevieSelect"/>
			<include refid="adminSearch"/>
			order by b.board_no desc limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<!-- 경진 추가 start  ************************************************************************************************** -->
	<!-- 탐방기 : 탐방기 select문 -->
	<sql id="cafeRevieSelect">
		select u.user_no, u.nick , u.name , u.user_id , u.user_grade , g.user_grade_image , b.board_no ,
			   b.view_number , b.writing_title , b.registration_date , b.update_date,
			   b.writing_content , b.vote_number , b.reply_cnt , b.board_del_cdt, z.zone_no , z.zone_name ,
			   t.theme_no , t.theme_name , c.cafe_no, c.cafe_name , c.address, i.image_name 
			from board b left join image i on b.board_no = i.board_no 
						left join users u on b.user_no = u.user_no 
						left join grade g on u.user_grade = g.user_grade 
						left join cafe c on b.cafe_no = c.cafe_no 
						left join zone z on c.zone_no = z.zone_no 
						left join theme t on c.theme_no = t.theme_no
	</sql>
	
	<!-- 탐방기 : 탐방기 list -->
	<select id="cafeReviesList" parameterType="map" resultMap="BoardResult">
		<include refid="cafeRevieSelect"/>
			<include refid="search"/>
			order by b.board_no desc limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<!-- 탐방기 : 탐방기 best list -->
	<select id="cafeReviewBestList" parameterType="map" resultMap="BoardResult">
		<include refid="cafeRevieSelect"/>
			<include refid="search"/>
			order by b.vote_number desc limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<!-- 탐방기 : 탐방기 월간 best -->
	<select id="cafeReviewMonthBestList" resultMap="BoardResult">
		select v.board_no , b.writing_title , b.reply_cnt 
			from vote v left join board b on v.board_no = b.board_no, 
				(select board_no, count(board_no) as cnt  from vote where month(vote_date) = month(now())-1 group by board_no) num
			where v.board_no = num.board_no and b.board_no2 = 1
			group by board_no
			order by num.cnt desc, v.board_no limit 10;
	</select>
	
	<!-- 탐방기 : 글등록 -->
	<insert id="cafeReviewInsert" parameterType="BoardVO">
		insert into board(board_no2 , user_no , cafe_no , writing_title , writing_content) 
			values (#{boardNo2.boardNo}, #{userNo.userNo}, #{cafeNo.cafeNo}, #{writingTitle}, #{writingContent});
	</insert>
	
	<!-- 탐방기 : 수정 -->
	<update id="cafeReviewModify" parameterType="BoardVO">
		update board 
			set writing_title = #{writingTitle}, writing_content = #{writingContent}, update_date = now()
			where board_no = #{boardNo}
	</update>
	
	<!-- 탐방기 : 삭제 (삭제 여부 수정) -->
	<update id="cafeReviewRemove" parameterType="BoardVO">
		update board 
			set board_del_cdt = #{boardDelCdt}
			where board_no = #{boardNo};
	</update>
	
	<!-- 탐방기 : 탐방기 read -->
	<select id="cafeReviewRead" resultMap="BoardResult">
		<include refid="cafeRevieSelect"/>
		where b.board_no = #{boardNo}
	</select>
	
	<select id="cafeReviewSameList" resultMap="BoardResult">
		<include refid="cafeRevieSelect"/>
		where c.cafe_no = #{cafeNo.cafeNo} and b.board_no != ${boardNo}
	</select>
	
	<select id="cafeReivewSameCnt" resultType="int">
		select count(*) 
			from board b left join cafe c on b.cafe_no = c.cafe_no 
			where c.cafe_no = #{cafeNo.cafeNo} and b.board_no != ${boardNo}
	</select>
	
	<!-- 어드민 : 신규탐방기 cnt -->
	<select id="todayBoardCnt" resultType="int">
		select count(*) from board where board_no2 = #{boardType} and date(registration_date) = date(now())
	</select>
	<select id="yesterBoardCnt" resultType="int">
		select count(*) from board where board_no2 = #{boardType} and date(registration_date) = date(now())-1 
	</select>
	
	<!-- 어드민 : 탐방기, 추천글 차트 -->
	<select id="adminBoardCntChart" parameterType="map" resultType="map">
		select month(registration_date) as month, count(*) as cnt from board where month(registration_date) = month(now())-#{subNum} and board_no2 = #{boardType}
	</select>
	
	<!-- 경진 추가 end  ************************************************************************************************** -->
	
	<!-- 탐방기(아름추가) : 탐방기 월간 베스트15 Main에 쓸 리스트 -->
	<select id="cafeReviewMonthBestListHome" resultMap="BoardResult">
		<include refid="cafeRevieSelect"/>
		where b.board_no2 =1 and b.board_del_cdt = 1 and left(DATE_SUB(curdate(), INTERVAL 1 month),7) = left(b.registration_date,7) order by b.vote_number desc limit 15
	</select>
	
	<!-- 탐방기(아름추가) : 탐방기 종합 추천수 베스트 3 -->
	<select id="cafeReviewVoteBestAll" resultMap="BoardResult">
		select b.*, c.*, z.*, t.*, u.*, g.* from board b
		left join cafe c on b.cafe_no = c.cafe_no 
		left join zone z on c.zone_no = z.zone_no
		left join theme t on c.theme_no = t.theme_no
		left join users u on b.user_no = u.user_no 
		left join grade g on u.user_grade = g.user_grade
		where b.board_no2 = 1 and b.board_del_cdt = 1 order by b.vote_number desc limit 4
	</select>
	<!-- 열혈무까인 : 종합리스트 -->
	<select id="bestUserAllBoard" resultMap="BoardResult">
	  select b.board_no, b.user_no, g.user_grade_image, u.nick, u.user_id, count(b.user_no) from board b left join users u on b.user_no = u.user_no left join grade g on u.user_grade = g.user_grade where b.board_del_cdt = 1 group by b.user_no order by count(b.user_no) desc limit 10
	</select>
	
	<!-- 열혈무까인 : 종합리스트 - 게시글수 -->	
	<select id="bestUserAllBoardCnt" resultType="int">
		select count(b.user_no) from board b left join users u on b.user_no = u.user_no where b.board_del_cdt = 1 group by b.user_no order by count(b.user_no) desc limit 10
	</select>
	
	<!-- 열혈무까인 : 전월기준리스트 -->
	<select id="bestUserBoard" resultMap="BoardResult">
		select b.board_no, b.user_no, g.user_grade_image, u.nick, u.user_id from board b left join users u on b.user_no = u.user_no left join grade g on u.user_grade = g.user_grade where left(DATE_SUB(curdate(), INTERVAL 1 month),7) = left(b.registration_date,7) and b.board_del_cdt = 1 group by b.user_no order by count(b.user_no) desc
	</select>
	<!-- 열혈무까인 : 전월기준리스트 - 게시글수 -->
	<select id="bestUserBoardCnt" resultType="int">
		select count(b.user_no) from board b left join users u on b.user_no = u.user_no left join grade g on u.user_grade = g.user_grade where left(DATE_SUB(curdate(), INTERVAL 1 month),7) = left(b.registration_date,7) and b.board_del_cdt = 1 group by b.user_no order by count(b.user_no) desc
	</select>
	
	<!-- 열혈무까인 : 게시글 최신글 3 -->
	<select id="bestUserBoardInfo" resultMap="BoardResult">
		select * from board where user_no = #{userNo.userNo} and board_del_cdt = 1 order by registration_date desc limit 3
	</select>
	<!-- 전체 탐방기 숫자  -->
	<select id="cafeReviewAllCnt" resultType="int">
		select count(*) from board where board_no2 = 1 and board_del_cdt = 1
	</select>
		
	<!-- 재승 추가 -->
	<select id="cafeReviewSameListByCafeNo" resultMap="BoardResult">
		<include refid="cafeRevieSelect"/>
		where c.cafe_no = #{cafeNo.cafeNo}
	</select>
	
	<select id="cafeReivewSameCntByCafeNo" resultType="int">
		select count(*) 
			from board b left join cafe c on b.cafe_no = c.cafe_no 
			where c.cafe_no = #{cafeNo.cafeNo}
	</select>

	<select id="recommedBoardNo" resultType="int">
		select board_no from board where board_no2 = 2 and board_del_cdt = 1
	</select>
</mapper>